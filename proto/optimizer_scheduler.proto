syntax = "proto3";

package composable_database;

import "common.proto";
// import "substrait/algebra.proto";

// Definitions specific to Optimizer and Scheduler interaction

message QueryInfo {
    int32 priority = 1;
    int32 cost = 2;
    // Additional fields here
}

message ScheduleQueryArgs {
    bytes physical_plan = 1;
    QueryInfo metadata = 2;
}

message ScheduleQueryRet {
    uint64 query_id = 1;
}

message QueryJobStatusArgs {
    uint64 query_id = 1;
}

message QueryJobStatusRet {
    QueryStatus query_status = 1;
}

message AbortQueryArgs {
    uint64 query_id = 1;
}

message AbortQueryRet {
    bool aborted = 1;
}

service Scheduler {
    rpc ScheduleQuery(ScheduleQueryArgs) returns (ScheduleQueryRet);
    rpc QueryJobStatus(QueryJobStatusArgs) returns (QueryJobStatusRet);
    rpc AbortQuery(AbortQueryArgs) returns (AbortQueryRet);
}
