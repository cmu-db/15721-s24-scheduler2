syntax = "proto3";

package composable_database;

import "common.proto";

// Task execution and status messages

message TaskDone {
    uint64 result_size = 1;
}

message TaskStatusIncomplete {
    enum StatusType {
        FAILED = 0;
        PREFETCH = 1;
    }
    StatusType status_type = 1;
}

message NotifyTaskStateArgs {
    uint64 task_id = 1;
    oneof state {
        TaskDone result = 2;
        TaskStatusIncomplete code = 3;
    }
}

message NewTaskPlan {
    bytes physical_plan = 1;
    oneof exchange_instruction {
        // Definitions for scatter, gather, discard results
        int32 scatter = 2;
        string gather = 3;
    }
}

message NotifyTaskStateRet {
    oneof response {
        NewTaskPlan plan = 1;
        // Wait or other instructions
    }
}
